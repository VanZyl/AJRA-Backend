// <auto-generated />
using System;
using AJRAApis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AJRAApis.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241229223839_Redbook")]
    partial class Redbook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AJRAApis.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Leave")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OtherLeave")
                        .HasColumnType("real");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<float>("SickLeave")
                        .HasColumnType("real");

                    b.Property<string>("StatusChangeDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxRefNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AJRAApis.Models.PaySlips", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("BarganingCouncil")
                        .HasColumnType("real");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("GrossAmount")
                        .HasColumnType("real");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<float>("LeaveAcc")
                        .HasColumnType("real");

                    b.Property<float>("LeaveAmountPaid")
                        .HasColumnType("real");

                    b.Property<float>("LeaveBF")
                        .HasColumnType("real");

                    b.Property<float>("LeaveHoursWorked")
                        .HasColumnType("real");

                    b.Property<float>("LeaveTaken")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NetAmount")
                        .HasColumnType("real");

                    b.Property<float>("NormalAmountPaid")
                        .HasColumnType("real");

                    b.Property<float>("NormalHoursWorked")
                        .HasColumnType("real");

                    b.Property<float>("OtherDeductions")
                        .HasColumnType("real");

                    b.Property<float>("OtherTaken")
                        .HasColumnType("real");

                    b.Property<float>("OvertimeAmountPaid")
                        .HasColumnType("real");

                    b.Property<float>("OvertimeHoursWorked")
                        .HasColumnType("real");

                    b.Property<string>("PaySlipCycle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaySlipDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("PublicHolidayAmountPaid")
                        .HasColumnType("real");

                    b.Property<float>("PublicHolidayHoursWorked")
                        .HasColumnType("real");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<float>("SickLeaveTaken")
                        .HasColumnType("real");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TillShortage")
                        .HasColumnType("real");

                    b.Property<float>("UIFContribution")
                        .HasColumnType("real");

                    b.Property<float>("Uniforms")
                        .HasColumnType("real");

                    b.Property<float>("Wastages")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PaySlips");
                });

            modelBuilder.Entity("AJRAApis.Models.PaySlips", b =>
                {
                    b.HasOne("AJRAApis.Models.Employee", null)
                        .WithMany("PaySlips")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("AJRAApis.Models.Employee", b =>
                {
                    b.Navigation("PaySlips");
                });
#pragma warning restore 612, 618
        }
    }
}
